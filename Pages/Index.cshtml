@page
@model IndexModel
@{
    ViewData["Title"] = "Wordle Solver";
}

<link rel="stylesheet" href="../styles.css" />

<div style="text-align: center;">
    <h1>Wordle Solver</h1>

    <p>As you play Wordle, enter your guesses here, indicate the proper color by double-clicking, and click Submit to get the next best
        guess!</p>
</div>

<form method="post" id="wordleForm" onsubmit="return validateForm();">
    @for (int i = 0; i < 6; i++)
    {
        <div class="wordle-row">
            @for (int j = 0; j < 5; j++)
            {
                string inputValue = TempData[$"word-{i}-letter-{j}"]?.ToString().Trim();
                string inputColor = TempData[$"word-{i}-letter-{j}-color"]?.ToString().Trim();

                <input type="text" class="letter-input" maxlength="1" name="@($"word-{i}-letter-{j}")"
                    value="@(string.IsNullOrEmpty(inputValue) ? "" : inputValue)"
                    style="background-color:@(string.IsNullOrEmpty(inputColor) ? "darkgrey" : inputColor)" />
                <input type="hidden" name="@($"word-{i}-letter-{j}-color")" value="@(inputColor)" />
            }
            <button type="button" class="btn btn-grey delete-button" onclick="clearRow(@i)"><i
                    class="fas fa-trash-alt"></i></button>
        </div>
    }
    
    <div class="button-container">
        <button type="submit" class="btn btn-primary submit-button">Submit</button>
        <button type="button" class="btn btn-danger clear-button" onclick="clearAll()">Clear All</button>
    </div>

    <!-- Add this section to display the top 10 likely words -->
    @if (Model.Top10LikelyWords != null && Model.Top10LikelyWords.Count > 0)
{
    <div id="wordList">
        <h2>Most Likely Words:</h2>
        <ul>
            @foreach (var word in Model.Top10LikelyWords)
            {
                <li style="cursor:pointer; text-decoration: underline; color: blue;" onclick="insertWord('@word.ToUpper()')">
                    @word.ToUpper()</li>
            }
        </ul>
    </div>
}

</form>

@section Scripts {
    <script>
        // Get all the letter-input elements
        const letterInputs = document.querySelectorAll('.letter-input');

        // Add a dblclick event listener to each letter-input
        letterInputs.forEach(input => {
            input.addEventListener('dblclick', () => {

                if (input.style.backgroundColor === 'darkgrey') {
                    input.style.backgroundColor = 'green';
                } else if (input.style.backgroundColor === 'green') {
                    input.style.backgroundColor = 'yellow';
                } else {
                    input.style.backgroundColor = 'darkgrey';
                }

                // Update the corresponding hidden input with the color value
                input.nextElementSibling.value = input.style.backgroundColor;
            });

            // Disable text selection, copy, cut, and paste
            input.addEventListener('selectstart', (event) => {
                event.preventDefault();
            });
            input.setAttribute('oncopy', 'return false;');
            input.setAttribute('oncut', 'return false;');
            input.setAttribute('onpaste', 'return false;');
        });

        // Add an input event listener to each letter-input
        letterInputs.forEach((input, index) => {
            input.addEventListener('input', () => {
                // Automatically advance to the next input box
                if (index < letterInputs.length - 1) {
                    letterInputs[index + 1].focus();
                }
            });

            // Set the input color to dark grey when it gets focus for the first time
            input.addEventListener('focus', () => {
                if (!input.dataset.focused) {
                    input.style.backgroundColor = 'darkgrey';
                    input.nextElementSibling.value = input.style.backgroundColor;
                    input.dataset.focused = 'true';
                }
            });
        });

        function validateForm() {
            let isValid = true;
            letterInputs.forEach(input => {
                if (
                    input.style.backgroundColor !== 'green' &&
                    input.style.backgroundColor !== 'yellow' &&
                    input.style.backgroundColor !== 'darkgrey' &&
                    input.style.backgroundColor !== ''
                ) {
                    isValid = false;
                }
            });
            return isValid;
        }

        function insertWord(word) {
            // Find the first empty row
            let emptyRowIndex = -1;
            for (let i = 0; i < 6; i++) {
                let rowEmpty = true;
                for (let j = 0; j < 5; j++) {
                    if (letterInputs[i * 5 + j].value !== '') {
                        rowEmpty = false;
                        break;
                    }
                }
                if (rowEmpty) {
                    emptyRowIndex = i;
                    break;
                }
            }

            // Insert the word into the empty row
            if (emptyRowIndex !== -1) {
                for (let i = 0; i < 5; i++) {
                    letterInputs[emptyRowIndex * 5 + i].value = word[i];
                }
            } else {
                alert('No empty row available to insert the word.');
            }
        }

        function clearRow(rowIndex) {
            for (let i = 0; i < 5; i++) {
                const input = letterInputs[rowIndex * 5 + i];
                input.value = '';
                input.style.backgroundColor = '';
                input.nextElementSibling.value = '';
            }
        }

        function clearAll() {
            // Clear all input boxes
            for (let i = 0; i < 30; i++) {
                const input = letterInputs[i];
                input.value = '';
                input.style.backgroundColor = '';
                input.nextElementSibling.value = '';
            }

            // Remove the list of potential words
            const wordList = document.querySelector('#wordList');
            if (wordList) {
                wordList.remove();
            }
        }

    </script>
}