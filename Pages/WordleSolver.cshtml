@page
@model WordleSolver.Pages.WordleSolverModel
@{
    ViewData["Title"] = "Wordle Solver";
}

<style>
    .wordle-row {
    display: flex;
    margin-bottom: 5px;
}

.letter-input {
    width: 30px;
    height: 30px;
    text-align: center;
    margin-right: 5px;
    border: 1px solid #ccc;
}
</style>


<h1>Wordle Solver</h1>

<form method="post" id="wordleForm" onsubmit="return validateForm();">
    @for (int i = 0; i < 6; i++)
    {
        <div class="wordle-row">
            @for (int j = 0; j < 5; j++)
            {
                <input type="text" class="letter-input" maxlength="1" name=@($"word-{i}-letter-{j}") />
                <input type="hidden" name=@($"word-{i}-letter-{j}-color") />
            }
        </div>
    }
    <button type="submit" class="btn btn-primary">Submit</button>
</form>


@if (!string.IsNullOrEmpty(Model.ResultMessage))
{
    <div class="result-message">
    @Model.ResultMessage
</div>
}

@if (Model.Words != null && Model.Words.Count > 0)
{
    <ul>
        @foreach (var word in Model.Words)
        {
            <li>
                @foreach (var letter in word.Letters)
                {
                    <span style="color: @letter.Color">@letter.Character</span>
                }
            </li>
        }
    </ul>
}

@section Scripts {
    <script>
        // Get all the letter-input elements
        const letterInputs = document.querySelectorAll('.letter-input');

        // Add a click event listener to each letter-input
        letterInputs.forEach(input => {
            input.addEventListener('click', () => {
                // Cycle through background colors: green -> yellow -> dark grey -> green
                if (input.style.backgroundColor === 'green') {
                    input.style.backgroundColor = 'yellow';
                } else if (input.style.backgroundColor === 'yellow') {
                    input.style.backgroundColor = 'darkgrey';
                } else {
                    input.style.backgroundColor = 'green';
                }

                // Update the corresponding hidden input with the color value
                input.nextElementSibling.value = input.style.backgroundColor;
            });
        });

        function validateForm() {
            let isValid = true;
            letterInputs.forEach(input => {
                if (input.style.backgroundColor !== 'green' && input.style.backgroundColor !== 'yellow' && input.style.backgroundColor !== 'darkgrey') {
                    isValid = false;
                }
            });
            return isValid;
        }
    </script>
}